user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
  }

  server {
    listen 80;
    server_name _;
    
    location /health {
      return 200 'ok';
      add_header Content-Type text/plain;
    }

    # Redirige todo a HTTPS
    location / {
      return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    server_name _;

    ssl_certificate     /etc/ssl/self-signed/fullchain.pem;
    ssl_certificate_key /etc/ssl/self-signed/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location /health {
      return 200 'ok';
      add_header Content-Type text/plain;
    }

    # Frontend est√°tico
    location / {
      root /var/www/frontend/dist;
      try_files $uri /index.html;
    }

    # API Backend
    location /api/ {
      proxy_pass http://backend:3001/api/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # WebSocket
    location /socket.io/ {
      proxy_pass http://websocket:3000/socket.io/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Descargas de uploads
    location /uploads/ {
      alias /var/www/backend/uploads/;
      autoindex off;
    }
  }
}


