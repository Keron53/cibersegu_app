version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: template_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-changeMeStrong}
      MONGO_INITDB_DATABASE: firmasDB
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - app_network

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: template_backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      FRONTEND_URL: ${FRONTEND_URL}
      WEBSOCKET_URL: ${WEBSOCKET_URL}
    volumes:
      - backend_uploads:/app/uploads
      - backend_certs:/app/CrearCACentral
    depends_on:
      - mongodb
    expose:
      - "3001"
    networks:
      - app_network

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: template_frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL}
      VITE_WS_URL: ${VITE_WS_URL}
    volumes:
      - frontend_dist:/app/dist
    depends_on:
      - backend
    expose:
      - "80"
    networks:
      - app_network

  websocket:
    build:
      context: ../../WebSocket
      dockerfile: Dockerfile
    container_name: template_websocket
    restart: unless-stopped
    expose:
      - "3000"
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: template_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - frontend_dist:/var/www/frontend/dist:ro
      - backend_uploads:/var/www/backend/uploads:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

volumes:
  mongodb_data:
  backend_uploads:
  backend_certs:
  frontend_dist:

networks:
  app_network:
    driver: bridge


