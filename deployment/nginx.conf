# Configuración de Nginx para Sistema de Firmas Electrónicas
# Proxy reverso con protección básica contra ataques

events {
    worker_connections 1024;
}

http {
    # Configuración de rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

    # Lista de IPs baneadas (se puede actualizar dinámicamente)
    geo $bad_client {
        default 0;
        # Agregar IPs baneadas aquí
        # 192.168.1.100 1;
    }

    # Configuración principal del servidor (HTTP - redirige a HTTPS)
    server {
        listen 80;
        server_name af-systemstechnology.com www.af-systemstechnology.com localhost;
        
        # Redirigir HTTP a HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Servidor HTTPS (SSL)
    server {
        listen 443 ssl;
        http2 on;
        server_name af-systemstechnology.com www.af-systemstechnology.com localhost;
        
        # Configuración SSL con certificados generados
        ssl_certificate     /etc/ssl/tu-dominio.crt;
        ssl_certificate_key /etc/ssl/tu-dominio.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # Headers de seguridad
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Bloquear IPs baneadas
        if ($bad_client) {
            return 444;
        }
        
        # Configuración de logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
        
        # Configuración de archivos estáticos
        client_max_body_size 50M;
        client_body_timeout 60s;
        client_header_timeout 60s;
        
        # API Backend - Todas las rutas de la API (DEBE IR PRIMERO)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
            
            # Manejar métodos HTTP correctamente
            proxy_method $request_method;
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
        }
        
        # API Backend - Login y registro con rate limiting específico (OPCIONAL, ya cubierto por /api/)
        location ~ ^/api/usuarios/(login|registro)$ {
            limit_req zone=login burst=3 nodelay;
            
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
            
            # Manejar métodos HTTP correctamente
            proxy_method $request_method;
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
        }
        
        # API Backend - Uploads con rate limiting específico (OPCIONAL, ya cubierto por /api/)
        location ~ ^/api/documentos/subir$ {
            limit_req zone=upload burst=5 nodelay;
            
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            proxy_send_timeout 300s;
            
            # Manejar métodos HTTP correctamente
            proxy_method $request_method;
            proxy_pass_request_headers on;
            proxy_pass_request_body on;
        }
        
        # Archivos subidos
        location /uploads/ {
            alias /var/www/backend/uploads/;
            expires 1d;
            add_header Cache-Control "public";
            
            # Protección básica
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Frontend (React) - proxy al contenedor frontend (DEBE IR DESPUÉS DE /api/)
        location / {
            proxy_pass http://frontend:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Bloquear acceso a archivos sensibles
        location ~ /\. {
            deny all;
        }
        
        location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
            deny all;
        }
        
        # Bloquear user agents maliciosos
        if ($http_user_agent ~* (wget|python|bot|crawler|spider)) {
            return 403;
        }
        
        # Bloquear requests con headers sospechosos
        if ($http_x_forwarded_for ~* "^(.*,)?(192\.168\.|10\.|172\.(1[6-9]|2[0-9]|3[01])\.)") {
            return 403;
        }
        
        # Configuración para manejo de errores
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
} 